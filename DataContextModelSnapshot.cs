// <auto-generated />
using System;
using DataIntegrityTool.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataIntegrityTool.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataIntegrityTool.Schema.Administrators", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("AesKey")
                        .HasColumnType("bytea");

                    b.Property<int?>("ChangePasswordToken")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameFirst")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameLast")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Administrators", (string)null);
                });

            modelBuilder.Entity("DataIntegrityTool.Schema.CustomerPayments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<short?>("Scans")
                        .HasColumnType("smallint");

                    b.Property<int?>("SubscriptionType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("CustomerPayments", (string)null);
                });

            modelBuilder.Entity("DataIntegrityTool.Schema.CustomerSubscriptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("CustomerSubscriptions", (string)null);
                });

            modelBuilder.Entity("DataIntegrityTool.Schema.Customers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("AesKey")
                        .HasColumnType("bytea");

                    b.Property<int>("ChangePasswordToken")
                        .HasColumnType("integer");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameFirst")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameLast")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Scans")
                        .HasColumnType("integer");

                    b.Property<short>("SeatsMax")
                        .HasColumnType("smallint");

                    b.Property<TimeSpan?>("SubscriptionTime")
                        .HasColumnType("interval");

                    b.PrimitiveCollection<int[]>("Tools")
                        .HasColumnType("integer[]");

                    b.Property<DateTime>("UsageSince")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("DataIntegrityTool.Schema.LicenseMetered", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("TimeBegun")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("LicenseMetered", (string)null);
                });

            modelBuilder.Entity("DataIntegrityTool.Schema.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<int>("Licensetype")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TimeBegin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ToolType")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Session", (string)null);
                });

            modelBuilder.Entity("DataIntegrityTool.Schema.SessionTransition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ErrorCode")
                        .HasColumnType("integer");

                    b.Property<int>("FrameOrdinal")
                        .HasColumnType("integer");

                    b.Property<int>("LayerOrdinal")
                        .HasColumnType("integer");

                    b.Property<int>("SessionId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TimeBegin")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("SessionTransition", (string)null);
                });

            modelBuilder.Entity("DataIntegrityTool.Schema.SubscriptionTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<short>("days")
                        .HasColumnType("smallint");

                    b.Property<string>("level")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("price")
                        .HasColumnType("smallint");

                    b.Property<int>("scans")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionTypes", (string)null);
                });

            modelBuilder.Entity("DataIntegrityTool.Schema.ToolParameters", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Id"));

                    b.Property<byte[]>("privateKey")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("publicKey")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<DateTime>("usageSince")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ToolParameters", (string)null);
                });

            modelBuilder.Entity("DataIntegrityTool.Schema.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("AesKey")
                        .HasColumnType("bytea");

                    b.Property<int?>("ChangePasswordToken")
                        .HasColumnType("integer");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameFirst")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameLast")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.PrimitiveCollection<int[]>("Tools")
                        .HasColumnType("integer[]");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("DataIntegrityTool.Schema.UsersAwaitingMFA", b =>
                {
                    b.HasBaseType("DataIntegrityTool.Schema.Users");

                    b.Property<int>("MFA")
                        .HasColumnType("integer");

                    b.ToTable("UsersAwaitingMFA", (string)null);
                });

            modelBuilder.Entity("DataIntegrityTool.Schema.UsersAwaitingMFA", b =>
                {
                    b.HasOne("DataIntegrityTool.Schema.Users", null)
                        .WithOne()
                        .HasForeignKey("DataIntegrityTool.Schema.UsersAwaitingMFA", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
